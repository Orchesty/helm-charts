global:
  frontend_url: https://pipes.example.com
  backend_url: https://backend.pipes.example.com
  starting_point_url: http://starting-point.pipes.example.com

  imageRegistry:
    enablePullSecret: false
    server: docker.io
    path: orchesty
    username: ""
    password: ""

  imageOverrides: {}
    # note: you can currently override image used in topologies only by changing images.bridge

  images:
    applinth-marketplace-ui: ""
    php-sdk: OVERRIDE
    backend: backend:1.1.0
    frontend: frontend:1.1.0
    cron-api: cron:1.1.0

    bridge: bridge:1.1.0
    counter: counter:1.1.0

    limiter: limiter:1.1.0
    starting-point: starting-point:1.1.0
    topology-api: topology-api:1.1.0
    fluentd: fluentd:1.1.0
    detector: detector:1.1.0
    worker-api: worker-api:1.1.0

  # Default global node selector
  nodeSelector: {}
  tolerations: []

  monitoring:
    logStorage: mongodb

    # Used unly when logStorage is "google"
    # You must also add iam policy binding to that account:
    # gcloud iam service-accounts add-iam-policy-binding \
    #   --role roles/iam.workloadIdentityUser \
    #   --member "serviceAccount:PROJECT-ID.svc.id.goog[NAMESPACE/KSA-NAME]" \
    #   GSA-WITH-LOGS-WRITER-ROLE
    #
    # see https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity#authenticating_to
    #
    googleServiceAccount: gsa-with-Logs-Writer-role

  api:
    serviceAnnotations: {}

  applinthMarketplaceUI:
    auth_backlink: not-set
    serviceAnnotations: {}

  backend:
    alpha_instance_id: not-set
    checkInfinityLoop: true
    # values for backward compat, will be reset
    resources:
      requests:
        memory: 512Mi
        cpu: 25m
      limits:
        memory: 1Gi
        cpu: "2"

  cronApi:
    # values for backward compat, will be reset
    resources:
      requests:
        memory: 32Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: "1"

  frontend:
    serviceAnnotations: {}
    # values for backward compat, will be reset
    resources:
      requests:
        memory: 64Mi
        cpu: 25m
      limits:
        memory: 128Mi
        cpu: "2"

  limiter:
    # values for backward compat, will be reset
    resources:
      requests:
        memory: 128Mi
        cpu: 25m
      limits:
        memory: 512Mi
        cpu: "2"

  fluentd:
    # values for backward compat, will be reset
    resources:
      requests:
        memory: 256Mi
        cpu: 50m
      limits:
        memory: 1Gi
        cpu: "1"

  multiCounter:
    progressSave: true
    # values for backward compat, will be reset
    resources:
      requests:
        memory: 64Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: "2"

  phpSdk:
    extraEnv: {}
    worker_api_url: ""
    # FOO:
    # value: bar

  nodejsSdk:
    extraEnv: {}
    worker_api_url: ""
    # FOO:
    # value: bar

  startingPoint:
    serviceAnnotations: {}
    # values for backward compat, will be reset
    resources:
      requests:
        memory: 64Mi
        cpu: 10m
      limits:
        memory: 128Mi
        cpu: "2"

  detector:
    manageServiceAccount: true
    manageRBAC: true
    # values for backward compat, will be reset
    resources:
      requests:
        memory: 64Mi
        cpu: 50m
      limits:
        memory: 128Mi
        cpu: "2"

  topologyApi:
    manageServiceAccount: true
    manageRBAC: true
    # values for backward compat, will be reset
    resources:
      requests:
        memory: 128Mi
        cpu: 10m
      limits:
        memory: 256Mi
        cpu: "1"
    topologiesResources:
      defaultRequestCpu: 100m
      defaultRequestMemory: 128Mi
      defaultLimitCpu: 1000m
      defaultLimitMemory: 512Mi
    topologiesExtraEnv: {}
#     FOO:
#       value: bar

  worker:
    hostPathMounts: []
    nodeSelector: {}
    tolerations: []
    # values for backward compat, will be reset
    resources:
      requests:
        memory: 4Gi
        cpu: "1"
      limits:
        memory: 4Gi
        cpu: "4"


  workerApi:
    serviceAnnotations: {}
    # values for backward compat, will be reset
    resources:
      requests:
        memory: 16Mi
        cpu: "0.1"
      limits:
        memory: 512Mi
        cpu: "2"

nameOverride: ""
fullnameOverride: ""
