{{- $root := . -}}
{{ range $workerName, $worker := .Values.global.workers }}
---
{{- $componentName := eq $workerName "default" | ternary (printf "worker") (printf "worker-%s" $workerName) -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "pipes.fullname" (dict "suffix" $componentName "root" $root) }}
  labels:
{{ include "pipes.labels" $root | indent 4 }}
{{ include "pipes.selectorLabels" (dict "suffix" $componentName "root" $root) | indent 4 }}
spec:
{{- if $worker.replicas }}
  replicas: {{ $worker.replicas }}
{{- else }}
  replicas: 1
{{- end }}

  selector:
    matchLabels:
{{ include "pipes.selectorLabels" (dict "suffix" $componentName "root" $root) | indent 6 }}
  template:
    metadata:
      labels:
{{ include "pipes.selectorLabels" (dict "suffix" $componentName "root" $root) | indent 8 }}
    spec:
{{ include "pipes.imagePullSecrets" $root | indent 6 }}
      containers:
        - name: "{{ $componentName }}"
          image: "{{ $worker.image }}"
          imagePullPolicy: Always
          ports:
            - name: http
{{- if eq $worker.sdk "php" }}
              containerPort: 80
{{- else }}
              containerPort: 8000
{{- end }}
          env:
{{- range $name, $def := $worker.extraEnv }}
            - name: {{ $name }}
              {{- $def | toYaml | nindent 14}}
{{- end }}
{{- if not $root.Values.global.worker_api_url }}
            - name: WORKER_API_HOST
              value: "http://{{ include "pipes.fullname" (dict "suffix" "worker-api" "root" $root) }}"
{{- else }}
            - name: WORKER_API_HOST
              value: "{{ $root.Values.global.worker_api_url }}"
{{- end }}
            - name: BACKEND_URL
              value: "{{ $root.Values.global.backend_url }}"
            - name: STARTING_POINT_URL
              value: "{{ $root.Values.global.starting_point_url }}"
            - name: CRYPT_SECRET
              valueFrom:
                secretKeyRef:
                  key: crypt_secret
                  name: {{ include "pipes.fullname" (dict "suffix" "secrets" "root" $root) }}
            - name: ORCHESTY_API_KEY
              valueFrom:
                secretKeyRef:
                    key: orchesty_api_key
                    name: {{ include "pipes.fullname" (dict "suffix" "secrets" "root" $root) }}

          resources:
{{- if $worker.resources }}
{{ toYaml $worker.resources | indent 12 }}
{{- else }}
{{ toYaml $root.Values.global.worker.resources | indent 12 }}
{{- end }}
          {{- if $worker.readinessProbe }}
          readinessProbe:
           {{ toYaml $worker.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if $worker.livenessProbe }}
          livenessProbe:
           {{ toYaml $worker.livenessProbe | nindent 12 }}
          {{- end }}

{{- if $worker.sidecars }}
{{- range $i, $sidecar := $worker.sidecars }}
        - name: {{ $sidecar.name }}
          image: {{ $sidecar.image }}
          imagePullPolicy: Always
          {{- if $sidecar.command }}
          command:
          {{- range $c := $sidecar.command }}
            - {{ $c }}
          {{- end }}
          {{- end }}
          {{- if $sidecar.args }}
          args:
          {{- range $a := $sidecar.args }}
            - {{ $a }}
          {{- end }}
          {{- end }}
          {{- if $sidecar.securityContext }}
          securityContext:
            {{ toYaml $sidecar.securityContext | nindent 12 }}
          {{- end }}
          {{- if $sidecar.volumeMounts }}
          volumeMounts:
            {{ toYaml $sidecar.volumeMounts | nindent 12 }}
          {{- end }}
          {{- if $sidecar.readinessProbe }}
          readinessProbe:
            {{ toYaml $sidecar.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if $sidecar.livenessProbe }}
          livenessProbe:
            {{ toYaml $sidecar.livenessProbe | nindent 12 }}
          {{- end }}
{{- end }}
{{- end }}

      volumes:
      {{- range $i, $vol := $worker.volumes }}
        - name: {{ $vol.name }}
        {{- if $vol.configMap }}
          configMap:
            name: {{ $vol.configMap.name }}
        {{- end }}
        {{- if $vol.secret }}
          secret:
            secretName: {{ $vol.secret.secretName }}
        {{- end }}
      {{- end }}

{{- with $root.Values.global.worker.nodeSelector | default $root.Values.global.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with $root.Values.global.worker.tolerations | default $root.Values.global.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}

{{ end }}
